name: "Lommedalen Aurora Borealis Bot"

on:
  schedule:
    # Schedule updated daily by update-sun-schedule workflow based on astronomical darkness
    # Default fallback: evening/morning hours
    - cron: "*/30 18-23 * * *"
    - cron: "*/30 0-4 * * *"
  workflow_dispatch:  # Manual trigger for testing

jobs:
  aurora-detector:
    runs-on: ubuntu-latest
    timeout-minutes: 25  # Hard limit slightly above our target

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Restore shuffle state
        uses: actions/cache/restore@v4
        with:
          path: shuffle_state.json
          key: shuffle-state-v2-${{ github.run_number }}
          restore-keys: |
            shuffle-state-v2-
        continue-on-error: true

      - name: Quick darkness check
        id: darkness
        run: python src/check_darkness.py
        continue-on-error: true

      - name: Run Aurora Detection
        if: steps.darkness.outcome == 'success'
        run: python src/main.py
        env:
          BSKY_HANDLE: ${{ secrets.BSKY_HANDLE }}
          BSKY_PASSWORD: ${{ secrets.BSKY_PASSWORD }}
          KEY_GITHUB_TOKEN: ${{ secrets.KEY_GITHUB_TOKEN }}
          SUN_LAT: 59.95
          SUN_LNG: 10.466667
          MIN_KP: 4

      - name: Save shuffle state
        uses: actions/cache/save@v4
        if: always() && hashFiles('shuffle_state.json') != ''
        with:
          path: shuffle_state.json
          key: shuffle-state-v2-${{ github.run_number }}

      - name: Cleanup temporary files
        if: always()
        run: |
          rm -rf today/

      - name: Upload session logs (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: aurora-logs-${{ github.run_number }}
          path: |
            *.log
          retention-days: 3